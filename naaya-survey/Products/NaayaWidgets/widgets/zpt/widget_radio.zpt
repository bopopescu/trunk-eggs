<tal:comment condition="nothing">
<!-- mode can be: view, edit or manage -->
</tal:comment>

<tal:block define="
    mode options/mode|string:view;
    datamodel options/datamodel|nothing;
	widget_id here/getWidgetId;
    nonEmptyTitle python:test(here.title, here.title,
        here.getNonEmptyAttribute('title'));
    nonEmptyTooltips python: test(here.tooltips, here.tooltips,
        here.getNonEmptyAttribute('tooltips'));
    ">

<!-- View mode -->
<div tal:condition="python:mode == 'view'" class="widgetViewMode">
	<strong tal:content="nonEmptyTitle" class="widget-title" />
	<br />
	<tal:block define="choice python:here.getChoice(datamodel, anyLangNonEmpty=True)">
		<tal:block condition="python: choice is not None">
			<span tal:condition="choice" tal:content="choice"></span>
			<span tal:condition="not: choice" i18n:translate="">Other</span>
		</tal:block>
		<span tal:condition="python: choice is None" i18n:translate="" class="no-response">
			-
		</span>
	</tal:block>
</div>

<!-- Edit mode -->
<div tal:condition="python:mode == 'edit'" class="widgetEditMode"
	 tal:define="datamodel python:here.getSession(widget_id, datamodel);">

	<label tal:attributes="for widget_id" class="widget-title">
		<span tal:content="nonEmptyTitle" />
		<span tal:condition="here/required" class="required">*</span>
	</label>
	<div class="tooltips" tal:content="structure nonEmptyTooltips" />
	<tal:block repeat="choice python: here.getChoices(anyLangNonEmpty=True)"
               define="datamodel python:here.getChoiceIdx(datamodel)">
		<tal:block define="choice_idx repeat/choice/index;
		                   input_id python:'%s_%d' % (widget_id, choice_idx);">
			<input type="radio" tal:attributes="
				value choice_idx;
				name string:${widget_id}:int;
				id input_id;
				checked python:choice_idx==datamodel"/>
			<label tal:attributes="for input_id" tal:content="choice">Choice</label>
		</tal:block>
		<br tal:condition="python:here.display == 'vertical'" />
	</tal:block>
	<tal:block tal:condition="here/add_extra_choice" tal:define="input_id here/getExtraChoiceInputId">
		<div> 
			<label tal:attributes="for input_id" i18n:translate="">Your choice</label>
			<input tal:attributes="id input_id; name string:${input_id}:ustring:utf8; value python:datamodel and datamodel[1] or ''" type="text" />
		</div>
	</tal:block>
</div>

<!-- Edit widget properties -->
<metal:block use-macro="here/multiplechoice_render_meth/macros/manage">
	<!-- Custom fields -->
	<metal:block fill-slot="custom_fields">
		<!-- Display mode -->
		<div class="field">
			<label for="display" i18n:translate="">Display mode</label>
			<select id="display" name="display">
				<tal:block repeat="mode here/display_modes">
					<option tal:content="mode" tal:attributes="
						value mode;
						selected python:test(mode == here.display, 'selected', None)"/>
				</tal:block>
			</select>
		</div>
		<!-- Extra choice -->
		<div class="field" tal:define="add_extra_choice python:here.getSession('add_extra_choice', here.getProperty('add_extra_choice', False));">
			<label for="add_extra_choice" i18n:translate="">Add an extra choice</label>
			<select id="add_extra_choice" name="add_extra_choice:boolean" tal:attributes="disabled num_answers">
				<option value="True" tal:attributes="selected add_extra_choice" i18n:translate="">Yes</option>
				<option value="False" tal:attributes="selected not:add_extra_choice" i18n:translate="">No</option>
			</select>
		</div>
	</metal:block>
</metal:block>

</tal:block>
