<metal:block define-macro="validate">

<fieldset id="duplicates-wrapper" style="display: none">
	<legend i18n:translate="">This entry might be a duplicate. Similar entries:</legend>
	<ul id="duplicates">
	</ul>
</fieldset>
<script>
(function() {
	var search_duplicates_in_progress = false;
	var search_duplicates_defered = false;
	function search_duplicates() {
		$('#duplicates-wrapper').hide();

		var title_en = $('#w_assessment-name-en').attr('value');
		var title_ru = $('#w_assessment-name-ru').attr('value');
		var original_title = $('#w_title-original-language').attr('value');
		var year =  $('#w_assessment-year').attr('value');
		if (! (year && (title_en || title_ru || original_title)) ) {
			return;
		}

		if (search_duplicates_in_progress) {
			search_duplicates_defered = true;
			return;
		}

		search_duplicates_in_progress = true;
		$.ajax({
				url: 'virtual-library-viewer/get_close_answers',
				data:{'title_en:utf8:ustring': title_en,
						'title_ru:utf8:ustring': title_ru,
						'original_title:utf8:ustring': original_title,
						'year:utf8:ustring': year},
				dataType: 'json',
				success: function(data) {
					var dup_list = $('#duplicates');
					dup_list.empty();

					var current_answer_id = $('input[name="answer_id"]').val();
					if (current_answer_id) {
						var reg = new RegExp(current_answer_id + '$');
						if (data && data.length > 0) {
							for (var i = 0; i < data.length; i++) {
								if (reg.test(data[i].answer_url)) {
									data.splice(i, 1);
									break
								}
							}
						}
					}

					if (data && data.length > 0) {
						for (var i = 0; i < data.length; i++) {
							var item = data[i];
							$('<li><a href="'+item.answer_url+'" target="_blank">'
								+item.title+'<'+'/a><'+'/li>')
							.appendTo(dup_list);
						}
						$('#duplicates-wrapper').show();
					}
				},
				complete: function() {
					search_duplicates_in_progress = false;
					if (search_duplicates_defered) {
						search_duplicates_defered = false;
						search_duplicates();
					}
				}
		});
	}

	$(document).ready(function() {
		$('#w_assessment-name-en').change(search_duplicates);
		$('#w_assessment-name-ru').change(search_duplicates);
		$('#w_title-original-language').change(search_duplicates);
		$('#w_assessment-year').change(search_duplicates);
	});
})();
</script>

<script tal:content="python:'var naaya_site_url=%s' % here.rstk.json_dumps(
							  here.getSite().absolute_url())"></script>
<script>$(function() {

	/*var widget_green_topics = $("label[for='w_green-economy-topics']").parent();
	var widget_green_efficiency = $("label[for='w_resource-efficiency-topics']").parent();
	var widget_water_topics = $("label[for='w_water-resources-topics']").parent();
	var widget_water_resources = $("label[for='w_water-resource-management-topics']").parent();


	$('<div '+'>').insertAfter(widget_green_efficiency).append(
		widget_green_topics,
		widget_green_efficiency,
		widget_water_topics,
		widget_water_resources
	).css({
		'background-color': '#ecf5fa',
		'border': '1px solid #b6cde1'
	}).children().css({
		'padding-left': '3em'
	});
	*/


	/*var widgets_by_theme = {
	  green: $('<div '+'>').insertAfter(widget_green_efficiency).append(
		widget_green_topics.prev('div.widgetEditMode'),
		widget_green_topics,
		widget_green_efficiency),
	  water:$('<div '+'>').insertAfter(widget_water_resources).append(
		widget_water_topics.prev('div.widgetEditMode'),
		widget_water_topics,
		widget_water_resources)
	};
	widgets_by_theme['green'].add(widgets_by_theme['water']).css({
		'background-color': '#ecf5fa',
		'border': '1px solid #b6cde1'
	}).children(':not(:first-child)').css({
		'padding-left': '3em'
	});

	function show_hide_widgets() {
		var theme_radio_id = $("input[name='w_theme:int']:checked").attr('id');
		if(theme_radio_id == 'w_theme_0') {
			widgets_by_theme['water'].hide();
			widgets_by_theme['green'].show();
		}
		else if(theme_radio_id == 'w_theme_1') {
			widgets_by_theme['water'].show();
			widgets_by_theme['green'].hide();
		}
		else if(theme_radio_id == 'w_theme_2') {
			widgets_by_theme['water'].show();
			widgets_by_theme['green'].show();
		}
		else {
			widgets_by_theme['water'].hide();
			widgets_by_theme['green'].hide();
		}
	}

	show_hide_widgets();
	$("input[name='w_theme:int']").click(show_hide_widgets);
	*/

	/*function map_pin_to_label(pin_id, label) {
		var url = naaya_site_url + '/portal_map/getSymbolPicture?id=' + pin_id;
		label.append(' ', $('<img'+'/>').attr('src', url));
	}

	map_pin_to_label('symbol825', $("label[for='w_theme_0']"));
	map_pin_to_label('symbol814', $("label[for='w_theme_1']"));
	map_pin_to_label('symbol851', $("label[for='w_theme_2']"));
	*/
});</script>

<tal:block define="schema_tool here/getSchemaTool"><script tal:content="string:
	var WWW_URL='${schema_tool/absolute_url}/www/';"></script></tal:block>
<script tal:define="curr_lang python: request.get('lang', None) or here.gl_get_selected_language();
					curr_lang_json python: here.rstk.json_dumps(curr_lang);
					site here/getSite;
					library_object site/tools/virtual_library/bibliography-details-each-assessment;
					country_choices python: library_object['w_official-country-region'].getChoices();
					region_choices python: library_object['w_geo-coverage-region'].getChoices();"
		tal:content="string:var curr_lang = ${curr_lang_json};
							var country_choices = ${country_choices};
							var region_choices = ${region_choices};">
</script>
<div id="modal-select-language" style="display: none"
		title="Could not add the title in original language"
		i18n:attributes="title">
	<p i18n:translate="">Please select a language first</p>
</div>
<div id="modal-enter-title" style="display: none"
		title="Could not add the title in original language"
		i18n:attributes="title">
	<p i18n:translate="">Please enter the title for the selected language</p>
</div>
<script>
// http://gist.github.com/472607
$(function() {

	//JQuery UI dialogs
	//$( "#themes_details" ).dialog({
	//	width: 800,
	//	height: 500,
	//	modal: true,
	//	buttons: { "Close": function() { $(this).dialog("close"); } }
	//});

	//Unhide the main form (hidden so it only works with javascript turned on.
	$('form[name="frmAdd"]').show();
	$('#anonymous_responder_email').parent().hide()

	// function to transform a list of checkboxes with same name
	// to a single select hidding the items not selected
	function list_selection(list_id, choices) {
		function show_item(i) {
			$('#' + list_id + '_' + i).attr('checked', 'checked');
			$('#' + list_id + '_' + i).next().after($('<br/>'));
			$('#' + list_id + '_' + i).show();
			$('#' + list_id + '_' + i).next().show();
		}
		function hide_item(i) {
			$('#' + list_id + '_' + i).removeAttr('checked');
			$('#' + list_id + '_' + i).hide();
			$('#' + list_id + '_' + i).next().hide();
			$('#' + list_id + '_' + i).next().next().remove();
		}

		var single_select = $('<select>').attr({
			'name': list_id + '_single_select:utf8:ustring',
			'id': list_id + '_single_select'});
		if (curr_lang == 'ru') {
			single_select.append($('<option>').attr('value', 'Please select').text('Пожалуйста выберите'));
		} else {
			single_select.append($('<option>').attr('value', 'Please select').text('Please select'));
		}
		$.each(choices, function(i, value){
			single_select.append($('<option>').attr('value', i).text(value));
			if (! $('#' + list_id + '_' + i).attr('checked')) {
				hide_item(i);
			}
		});
		$('#' + list_id + '_0').before(single_select);
		$('#' + list_id + '_0').before('<br/>');

		single_select.change(function() {
			show_item($(this).val());
			single_select.val('Please select');
		});
		$('input[name="' + list_id + ':list"]').click(function () {
			hide_item($(this).val());
		});
	}
	list_selection('w_official-country-region', country_choices);
	list_selection('w_geo-coverage-region', region_choices);

	$('#w_type-document_0').parent().hide();
	$('#w_title-original-language').hide();
	//$('#map-container').parent().parent().parent().hide();

	var languages = {'Select language':'none',
					'Albanian': 'sq',
					'Armenian': 'hy',
					'Azerbaijani': 'az',
					'Belarusian': 'be',
					'Bosnian': 'bs',
					'Bulgarian': 'bg',
					'Croatian': 'hr',
					'Czech': 'cs',
					'Danish': 'da',
					'Dutch': 'nl',
					'English': 'en',
					'Estonian': 'et',
					'Finnish': 'fi',
					'French': 'fr',
					'Georgian': 'ka',
					'German': 'de',
					'Greek': 'el',
					'Hungarian': 'hu',
					'Icelandic': 'is',
					'Irish (Gaelic)': 'ga',
					'Italian': 'it',
					'Kazakh': 'kk',
					'Kirghiz': 'ky',
					'Latvian': 'lv',
					'Lithuanian': 'lt',
					'Macedonian': 'mk',
					'Maltese': 'mt',
					'Montenegrin': 'srp',
					'Norwegian': 'no',
					'Polish': 'pl',
					'Portuguese': 'pt',
					'Romanian': 'ro',
					'Russian': 'ru',
					'Serbian': 'sr',
					'Slovak': 'sk',
					'Slovene': 'sl',
					'Spanish': 'es',
					'Swedish': 'sv',
					'Tajik': 'tg',
					'Turkish': 'tr',
					'Turkmen': 'tk',
					'Ukrainian': 'uk',
					'Uzbek': 'uz'
					};
	$('<select id="languages_list">')
		.insertBefore($('#w_title-original-language'));
	//$('#w_title-original-language').before('<select id="languages_list">');
	/*for (i=0;i<languages.length;i++){
		$('#languages_list')
			.append($('<option>', {value: languages[i]})
			.text(languages[i]));
		}*/
	$.each(languages, function(key, value){
		$('#languages_list')
			.append($('<option>', {value: key})
			.text(key));
		});

	$('<div id="new_language" />')
		.insertAfter($('#languages_list'));
	$('<input id="new_language_value" type="text" />')
		.attr('size', '80')
		.appendTo($('#new_language'));
	$('<a id="add_language_value" />')
		.text('Add')
		.attr({
		'href': 'javascript:void(0)',
		'style': 'margin-left:1em'
		})
		.insertAfter($('#new_language_value'));
	$('<ul id="original_titles" />')
		.attr('style', 'margin:0; padding:3px;')
		.addClass('no_bullets')
		.insertAfter($('#new_language'));
	$('#add_language_value').click(function() {
		if ($("#languages_list").val() == 'Select language') {
			// a workaround for a flaw in the demo system (http://dev.jqueryui.com/ticket/4375), ignore!
			$( "#modal-select-language:ui-dialog" ).dialog( "destroy" );
			$( "#modal-select-language" ).dialog({
				modal: true,
				buttons: {
					Ok: function() {
						$( this ).dialog( "close" );
					}
				}
			});
			return;
		}

		if (! $("#new_language_value").val()) {
			// a workaround for a flaw in the demo system (http://dev.jqueryui.com/ticket/4375), ignore!
			$( "#modal-enter-title:ui-dialog" ).dialog( "destroy" );
			$( "#modal-enter-title" ).dialog({
				modal: true,
				buttons: {
					Ok: function() {
						$( this ).dialog( "close" );
					}
				}
			});
			return;
		}

		update_language();
	});
	initialize_title_lines();

	function reset_languages_list(){
		$('#languages_list').val('Select language');
		$('#new_language_value').val('');
	}

	function initialize_title_lines(){
		var original_titles = $('#w_title-original-language').val();
		if (original_titles.length>0)
		{
			var original_titles_list = original_titles.split('\n');
			$.each(original_titles_list, function(index, value){
				var splitted = value.split(' - ');
				var lang = splitted[0];
				var title = splitted[1];
				add_title_line(lang, title);
			})
		}
	}

	function google_translate(text, dest_lang, src_lang, target_field){
		$.get('translate', {'text:utf8:ustring': text, dest_lang: dest_lang, src_lang: src_lang}, 
			function(data){
				if (console){
					console.log($('#'+target_field).val().length);
					console.log($('#'+target_field).val().split(': ')[0]);
				}
				if (data.length>0){
					if ($('#'+target_field).val().length == 0 ||
						$('#'+target_field).val().split(': ')[0] == 'Google translation'){
						$('#'+target_field).val('Google translation: '+data);
					}
				}
			});
	}

	function update_name_of_assessment(lang, title){
			if (lang == 'English'){
				$('#w_assessment-name-en').val(title);
				google_translate(title, 'ru', lang, 'w_assessment-name-ru');
				if (title.length>0){
					$('#w_assessment-name-en').attr('readonly', 'readonly');
				}
				else {
					$('#w_assessment-name-en').removeAttr('readonly');
				}
			}
			else if (lang == 'Russian'){
				$('#w_assessment-name-ru').val(title);
				google_translate(title, 'en', lang, 'w_assessment-name-en');
				if (title.length>0){
					$('#w_assessment-name-ru').attr('readonly', 'readonly');
				}
				else {
					$('#w_assessment-name-ru').removeAttr('readonly');
				}
			}
			else{
				google_translate(title, 'en', lang, 'w_assessment-name-en');
				google_translate(title, 'ru', lang, 'w_assessment-name-ru');
			}
	}

	function update_language(remove){
		var current_value = $('#w_title-original-language').val();
		var lang = $('#languages_list').val();
		if (remove){
			lang=remove;
		}
		var title = $('#new_language_value').val();
		if (title.length==0 && !remove){
			return;
		}
		if (current_value.length == 0){
			$('#w_title-original-language').val(lang+' - '+title);
			$('#w_title-original-language').trigger('change');
			add_title_line(lang, title);
		}
		else{
			var current_values = current_value.split('\n');
			var found = false;

			for (i=0;i<current_values.length;i++){
				var curr_values = current_values[i].split(' - ');
				var curr_lan = curr_values[0];
				if (curr_lan == lang)
				{
					if (remove){
						$('#'+remove+'_original_title').fadeOut(300).delay(300, function(){$(this).remove();});
						current_values.splice(i, 1);
						found = true;
						reset_languages_list();
						update_name_of_assessment(lang, '');
						break;
					}
					else{
						current_values[i]= lang+' - '+title;
						add_title_line(lang, title);
						found = true;
					}
				}
			}
			if (! found)
			{
				current_values.push(lang+' - '+title);
				add_title_line(lang, title);
			}
			$('#w_title-original-language').val(current_values.join('\n'));
			$('#w_title-original-language').trigger('change');
		}
		reset_languages_list();
	}

	function add_title_line(lang, title){
		var delete_link = $('<a>')
			.attr({
			'href': 'javascript:void(0);',
			'style': 'color: rgb(170, 0, 0); font-size: 80%;'
			})
			.text('[remove]');
		/*delete_link.append($("<img>").attr({
			src: WWW_URL + "cross.gif",
			title:'Remove',
			alt: '[x]'
		})).addClass('tick-image icon-image');*/
		delete_link.click(function(){
			update_language(lang);
		});
		var edit_link = $('<a>')
			.attr({
			'href': 'javascript:void(0);',
			'style': 'font-size: 80%;'
			})
			.text('[edit]');
		edit_link.click(function(){
			//update_language(lang);
			$('#languages_list').val(lang);
			$('#new_language_value').val(title);
		});
		var new_title_line = $('<li>').attr({
			'id': lang+'_original_title',
			'style': 'display:none'
			});
		
		new_title_line.append('<span class="title">'+title+' - <'+'em>'+lang+'<'+'/em><'+'/span> ', edit_link, ' ', delete_link);
		$('#'+lang+'_original_title').remove();
		new_title_line.appendTo($('#original_titles'));
		$('#'+lang+'_original_title').slideDown();
		update_name_of_assessment(lang, title);
	}

	function checkboxes_to_dropdown(input_name) {
		var checkboxes = $("input[type=checkbox][name='"+input_name+"']");
		var the_ul = $('<ul'+'>').css('margin-top', '-1em');
		var the_select = $('<select'+'><option value=""'+'>-- select value --<'+'/option><'+'/select>');

		$([the_ul, the_select]).insertBefore(checkboxes.first());

		checkboxes.each(function() {
			var checkbox = $(this);
			var label = checkbox.next('label');

			var option = $('<option'+'>').text(label.text());
			option.attr('value', checkbox.attr('value'));
			the_select.append(option);

			if(checkbox.is(':checked')) {
				selected(option);
			}

			checkbox.next('label').next('br').remove();
			checkbox.next('label').remove();
			checkbox.remove();
		});

		the_select.change(function(evt) {
			var option = $('option:selected', the_select);
			if(option.val() == "") return;
			selected(option);
		});

		function selected(option) {
			var remove_button = $('<a href="javascript:;"'+'>[remove]<'+'/a>');
			remove_button.css({color: '#a00', 'font-size': '80%'});
			remove_button.click(function() {
				selected_li.remove();
				option.attr('disabled', null);
			});
			var hidden_input = $('<input type="hidden"'+'>').attr({
				name: input_name,
				value: option.attr('value')
			});
			var selected_li = $('<li'+'>').append(
				option.text(), ' ', remove_button, hidden_input);

			option.attr('disabled', 'disabled');
			$('option', the_select)[0].selected = true;
			the_ul.append(selected_li);
		}
	}


	checkboxes_to_dropdown('w_green-economy-topics:list');
	checkboxes_to_dropdown('w_resource-efficiency-topics:list');
	checkboxes_to_dropdown('w_water-resources-topics:list');
	checkboxes_to_dropdown('w_water-resource-management-topics:list');

	var widget_green_topics = $("label[for='w_green-economy-topics']").parent();
	var widget_green_efficiency = $("label[for='w_resource-efficiency-topics']").parent();
	var widget_water_topics = $("label[for='w_water-resources-topics']").parent();
	var widget_water_resources = $("label[for='w_water-resource-management-topics']").parent();

	function show_hide_widgets(){
		widget_green_topics.hide();
		widget_green_efficiency.hide();
		widget_water_topics.hide();
		widget_water_resources.hide();

		var themes_checked = $("input[name='w_theme:list']:checked");
		for (i=0;i<themes_checked.length;i++)
		{
			if (themes_checked[i].id == 'w_theme_0'){
				widget_green_topics.show();
			};
			if (themes_checked[i].id == 'w_theme_1'){
				widget_water_topics.show();
			};
			if (themes_checked[i].id == 'w_theme_2'){
				widget_water_resources.show();
			};
			if (themes_checked[i].id == 'w_theme_3'){
				widget_green_efficiency.show();
			};
		}
	}

	show_hide_widgets();
	$("input[name='w_theme:list']").click(function() {
		show_hide_widgets();
	});

	var legend_elem = $("#w_submitter-name").parent().prev();
	var elem = $("#w_submitter-name").parent();
	var elements = [];
	for (var i = 0; i < 4; i++) {
		elements.push(elem);
		elem = elem.next();
	}
	var fieldset = $('<fieldset><'+'/fieldset');
	fieldset.append('<legend>' + legend_elem.text() + '<'+'/legend>');
	for (var i = 0; i < 4; i++) {
		fieldset.append(elements[i]);
	}
	fieldset.insertBefore(legend_elem);
	legend_elem.remove();

	// predefined values for type of organisation
	var single_select = $('<select>').attr({
		'id': 'w_submitter-organisation_single_select'
	});
	if (curr_lang == 'ru') {
		single_select.append($('<option>').attr('value', '').text('Пожалуйста выберите'));
	} else {
		single_select.append($('<option>').attr('value', '').text('Please select'));
	}
	var choices = ['University/academia',
					'government',
					'NGO',
					'industry',
					'general public'];
	var current_value = $("#w_submitter-organisation").val();
	var has_value = false;
	for (var i = 0; i < choices.length; i++) {
		if (current_value == choices[i]) {
			has_value = true;
			break
		}
	}
	if (!has_value && current_value) {
		choices.push(current_value);
	}
	$.each(choices, function (i, value) {
		single_select.append($('<option>').attr('value', value).text(value));
	});
	if (current_value) {
		single_select.val(current_value);
	}
	single_select.change(function() {
		$("#w_submitter-organisation").val($(this).val());
	});
	$("#w_submitter-organisation").hide();
	$("#w_submitter-organisation").parent().append(single_select);

	function set_international_organisation_label() {
		$("label[for='w_country-or-international-organisation'] span:first-child")
			.text('Name of international organisation');
	}
	function set_country_label() {
		$("label[for='w_country-or-international-organisation'] span:first-child")
			.text('Country');
	}

	if ($("#w_theme-coverage_0").attr("checked")
		|| $("#w_theme-coverage_1").attr("checked")) {
		set_international_organisation_label();
	} else if ($("#w_theme-coverage_2").attr("checked")) {
		set_country_label();
	}
	$("#w_theme-coverage_0").change(set_international_organisation_label);
	$("#w_theme-coverage_1").change(set_international_organisation_label);
	$("#w_theme-coverage_2").change(set_country_label);
	$('#anonymous_responder_email').val($('#w_submitter-email').val());	$('#w_submitter-email').change(function(){
		$('#anonymous_responder_email').val($('#w_submitter-email').val());
	});

});
</script>
</metal:block>