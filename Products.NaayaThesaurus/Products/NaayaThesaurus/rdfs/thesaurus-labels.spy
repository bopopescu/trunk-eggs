## Script (Python) "thesaurus-labels.rdf"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=langcode='fr'
##title=Labels and definitions
##

#get the HTML request and response objects.
request = container.REQUEST
RESPONSE =  request.RESPONSE

#load data
alias_container_utXmlEncode = container.alias_container_utXmlEncode
all_concepts = container.getAllConcepts()

#thesaurus identifier
thesaurus_url = 'http://www.semide.org/thesaurus'
#thesaurus_url = container.absolute_url()

#set content type
RESPONSE.setHeader('content-type', 'text/xml')

#start generating rdf content
print '<?xml version="1.0" encoding="UTF-8"?>'

print '''<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                  xmlns:skos="http://www.w3.org/2004/02/skos/core#"
                  xmlns:thesaurus="%s"
                  xml:lang="%s">''' % (thesaurus_url, langcode)

for concept in all_concepts:
    term_ob = container.getTermByID(concept.concept_id, langcode)
    alt_term_ob = container.getAltTermByID(concept.concept_id, langcode)
    definition_ob = container.getDefinition(concept.concept_id, langcode)
    scope_ob = container.getScopeNote(concept.concept_id, langcode)

    term_source = []
    if term_ob:
        for source_id in term_ob.source_id.split(' '):
            if source_id: term_source.append(container.getSource(source_id))

    definition_source = []
    if definition_ob:
        for source_id in definition_ob.source_id.split(' '):
            if source_id: definition_source.append(container.getSource(source_id))

    print '<skos:Concept rdf:about="%s/Concept/%s">' % (thesaurus_url, concept.concept_id)

    if term_ob:
        print '<skos:prefLabel>%s</skos:prefLabel>' % alias_container_utXmlEncode(term_ob.concept_name)
    if alt_term_ob:
        print '<skos:altLabel>%s</skos:altLabel>' % alias_container_utXmlEncode(alt_term_ob.alt_name)
    if definition_ob:
        print '<skos:definition>%s</skos:definition>' % alias_container_utXmlEncode(definition_ob.definition)
    if scope_ob:
        print '<skos:scopeNote>%s</skos:scopeNote>' % alias_container_utXmlEncode(scope_ob.scope_note)

    for src_ob in term_source:
        print '<rdf:source>%s</rdf:source>' % alias_container_utXmlEncode(src_ob.source_name)

    for def_src_ob in definition_source:
        print '<thesaurus:def_src>%s</thesaurus:def_src>' % alias_container_utXmlEncode(def_src_ob.source_name)

    print '</skos:Concept>'

print '</rdf:RDF>'

#return stuff
return printed
