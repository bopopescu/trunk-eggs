## Script (Python) "thesaurus-themes-relations.rdf"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=Concept relationships
##

#get the HTML request and response objects.
request = container.REQUEST
RESPONSE = request.RESPONSE

#load data
all_concepts = container.getAllConcepts()

#thesaurus identifier
thesaurus_url = 'http://www.semide.org/thesaurus'
#thesaurus_url = container.absolute_url()

#set content type
RESPONSE.setHeader('content-type', 'text/xml')

#start generating rdf content
print '<?xml version="1.0" encoding="UTF-8"?>'
print '''<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                  xmlns:skos="http://www.w3.org/2004/02/skos/core#">'''

for concept in all_concepts:
    concept_id = concept.concept_id
    broader_list = []
    narrower_list =[]
    related_list =[]

    relations_list = container.getConceptRelations(concept_id)
    for item in relations_list:
        if item.relation_type == '1':
            broader_list.append(item)
        elif item.relation_type == '2':
            narrower_list.append(item)
        elif item.relation_type == '3':
            related_list.append(item)

    print '<skos:Concept rdf:about="%s/concept/%s">' % (thesaurus_url, concept_id)

    for broader in broader_list:
        if broader:
            print '<skos:broader rdf:resource="%s/concept/%s" />' % (thesaurus_url, broader.relation_id)

    for narrower in narrower_list:
        if narrower:
            print '<skos:narrower rdf:resource="%s/concept/%s" />' % (thesaurus_url, narrower.relation_id)

    for related in related_list:
        if related:
            print '<skos:related rdf:resource="%s/concept/%s" />' % (thesaurus_url, related.relation_id)

    print '</skos:Concept>'

print '</rdf:RDF>'

#return stuff
return printed
